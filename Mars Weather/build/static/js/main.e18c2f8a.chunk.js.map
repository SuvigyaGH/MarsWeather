{"version":3,"sources":["img/mars.jpg","helpers.js","api.js","components/WeatherData.styles.js","components/WeatherData.js","components/Info.styles.js","components/Info.js","components/Unit.styles.js","components/Unit.js","components/Previous.styles.js","components/Previous.js","App.styles.js","App.js","index.js"],"names":["module","exports","formatTemperature","temperature","isMetric","returnTemp","Math","round","API_URL","Wrapper","styled","div","Date","Temp","Wind","props","deg","WeatherData","sol","date","className","maxTemp","minTemp","windDirectionDegrees","windSpeed","InfoStyles","Info","href","UnitStyles","Toggle","button","metric","Unit","setMetric","htmlFor","onClick","prev","PreviousWrapper","previous","PreviousDays","PreviousDay","Previous","weather","setPrevious","setSelectedSol","map","i","key","GlobalStyle","createGlobalStyle","bgImage","AppWrapper","MarsWeather","main","InfoWrapper","App","useState","loading","setLoading","setWeather","selectedSol","console","log","useEffect","a","fetch","json","marsWeather","sol_keys","solkey","AT","mx","mn","HWS","av","WD","most_common","compass_degrees","First_UTC","toLocaleDateString","undefined","day","month","length","fetchFromAPI","BGImage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e18c2f8a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mars.afe4aa06.jpg\";","export const formatDate = (date) =>\n  date.toLocaleDateString(undefined, { day: 'numeric', month: 'long' });\n\nexport const formatTemperature = (temperature, isMetric) => {\n  let returnTemp = temperature;\n  if (!isMetric) {\n    returnTemp = (temperature - 32) * (5 / 9);\n  }\n  return Math.round(returnTemp);\n};\n","const API_KEY = 'DEMO_KEY'\nexport const API_URL = `https://api.nasa.gov/insight_weather/?api_key=${API_KEY}&feedtype=json&ver=1.0`","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  grid-gap: 2em;\n  padding: 40px 0;\n`;\n\nexport const Date = styled.div`\n  h2 {\n    font-size: var(--fs-xl);\n    margin: 0;\n  }\n\n  p {\n    font-size: var(--fs-h2);\n    margin: 0;\n    color: var(--clr-gray);\n    font-weight: var(--fw-light);\n  }\n`;\n\nexport const Temp = styled.div`\n  --border: solid 0.25em var(--clr-accent-dark);\n  border-left: var(--border);\n  border-right: var(--border);\n  padding: 0 2em;\n`;\n\nexport const Wind = styled.div`\n  display: grid;\n\n  .section-title,\n  .reading {\n    grid-column: 2 / 3;\n  }\n\n  .wind__direction {\n    --size: 6rem;\n    width: var(--size);\n    height: var(--size);\n    border-radius: 50%;\n    background-color: rgba(255, 255, 255, 0.5);\n    display: -ms-grid;\n    display: grid;\n    place-items: center;\n    grid-row: 1 / span 2;\n  }\n\n  .wind__arrow {\n    --direction: ${(props) => props.deg + 'deg'};\n    --size: 0.8rem;\n    height: calc(var(--size) * 3);\n    width: var(--size);\n    background: var(--clr-accent-dark);\n    clip-path: polygon(50% 0, 0% 100%, 100% 100%);\n    transform: translateY(-50%) rotate(var(--direction));\n    transform-origin: bottom center;\n    transition: -webkit-transform 500ms ease;\n    transition: transform 500ms ease;\n    transition: transform 500ms ease, -webkit-transform 500ms ease;\n  }\n`;\n","import React from 'react';\n// Helpers\nimport { formatTemperature } from '../helpers';\n// Styles\nimport { Wrapper, Date, Temp, Wind } from './WeatherData.styles';\n\nconst WeatherData = ({ sol, isMetric }) => (\n  <Wrapper>\n    <Date>\n      <h2>{sol.sol}</h2>\n      <p>{sol.date}</p>\n    </Date>\n\n    <Temp>\n      <h2 className='section-title'>Temp</h2>\n      <p className='reading'>\n        High:\n        <span> {formatTemperature(sol.maxTemp, isMetric)}</span>°\n        <span>{isMetric ? ' C' : ' F'}</span>\n      </p>\n      <p className='reading'>\n        Low:\n        <span>  {formatTemperature(sol.minTemp, isMetric)}</span>°\n        <span> {isMetric ? ' C' : ' F'}</span>\n      </p>\n    </Temp>\n\n    <Wind deg={sol.windDirectionDegrees}>\n      <h2 className='section-title'>Wind</h2>\n      <p className='reading'>\n        <span>{sol.windSpeed}</span>\n        <span>{isMetric ? ' kph' : ' mph'}</span>\n      </p>\n\n      <div className='wind__direction'>\n        <div className='wind__arrow'></div>\n      </div>\n    </Wind>\n  </Wrapper>\n);\n\nexport default WeatherData;\n","import styled from 'styled-components';\n\nexport const InfoStyles = styled.div`\n  grid-column: 1 / 3;\n`;\n","import React from 'react';\n// Styles\nimport { InfoStyles } from './Info.styles';\n\nconst Info = () => (\n  <InfoStyles>\n    <p>\n      InSight is taking daily weather measurements (temperature, wind, pressure)\n      on the surface of Mars at Elysium Planitia, a flat, smooth plain near\n      Mars’ equator.\n    </p>\n    <p>\n      This is only a part of InSight’s mission.{' '}\n      <a href='https://mars.nasa.gov/insight/mission/overview/'>Click here</a>\n      to find out more.\n    </p>\n  </InfoStyles>\n);\n\nexport default Info;\n","import styled from 'styled-components';\n\nexport const UnitStyles = styled.div`\n  place-self: end;\n  color: var(--clr-light);\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  opacity: 0.7;\n  transition: opacity 275ms linear;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const Toggle = styled.button`\n  cursor: pointer;\n  width: 4em;\n  border: 2px solid var(--clr-light);\n  background: transparent;\n  padding: 0;\n  border-radius: 100vmax;\n  margin: 0 1em;\n\n  ::after {\n    content: '';\n    display: block;\n    background: var(--clr-light);\n    border-radius: 50%;\n    height: 1rem;\n    margin: 3px;\n    margin-left: ${(props) => (props.metric ? '3px' : 'auto')};\n    width: 1rem;\n  }\n`;\n","import React from 'react';\n// Styles\nimport { UnitStyles, Toggle } from './Unit.styles';\n\nconst Unit = ({ metric, setMetric }) => (\n  <UnitStyles>\n    <label htmlFor='cel'>°C</label>\n    <Toggle metric={metric} onClick={() => setMetric((prev) => !prev)}/>\n    <label htmlFor='fah'>°F</label>\n  </UnitStyles>\n);\nexport default Unit;\n","import styled from 'styled-components';\n\nexport const PreviousWrapper = styled.div`\n  background: var(--clr-light);\n  color: var(--clr-dark);\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  transform: ${({ previous }) =>\n    previous ? 'translateY(0)' : 'translateY(60%)'};\n  transition: -webkit-transform 350ms ease;\n  transition: transform 350ms ease;\n  transition: transform 350ms ease, -webkit-transform 350ms ease;\n  padding: 3rem;\n\n  .previous-weather__title {\n    text-align: ${({ previous }) => (previous ? 'left' : 'center')};\n    ${({ previous }) =>\n      previous ? 'animation: slideUpIn 750ms forwards;' : 'text-align: center'};\n  }\n\n  @-webkit-keyframes slideUpIn {\n    0% {\n      opacity: 0;\n      transform: translateY(50%);\n    }\n    100% {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n\n  @keyframes slideUpIn {\n    0% {\n      opacity: 0;\n      transform: translateY(50%);\n    }\n    100% {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n`;\n\nexport const Toggle = styled.button`\n  position: absolute;\n  background: var(--clr-light);\n  left: 50%;\n  top: 50px;\n  width: 10rem;\n  transform: translate(-50%, calc(-100% - 3rem));\n  text-align: center;\n  font-size: var(--fs-h2);\n  line-height: 1;\n  clip-path: polygon(50% 0, 0 100%, 100% 100%);\n  cursor: pointer;\n  color: var(--clr-gray);\n  border: 0;\n  font-family: inherit;\n\n  :hover,\n  :focus {\n    color: var(--clr-dark);\n  }\n\n  span {\n    display: block;\n    transform: ${({ previous }) =>\n      previous ? 'rotate(180deg) translateY(-6px)' : 'rotate(0)'};\n\n    transition: -webkit-transform 300ms ease;\n    transition: transform 300ms ease;\n    transition: transform 300ms ease, -webkit-transform 300ms ease;\n  }\n`;\n\nexport const PreviousDays = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  justify-content: space-between;\n  height: 150px;\n  overflow: auto;\n`;\n\nexport const PreviousDay = styled.div`\n  opacity: 0;\n  ${({ previous }) => previous && 'animation: slideUpIn 750ms forwards;'};\n  margin: 10px 0;\n  \n  > * {\n    margin: 0;\n  }\n\n  .previous-day__date {\n    font-size: 0.9rem;\n    color: var(--clr-gray);\n  }\n\n  .previous-day__more-info {\n    cursor: pointer;\n    border: 0;\n    border-radius: 100vmax;\n    background: var(--clr-dark);\n    color: var(--clr-light);\n    text-transform: uppercase;\n    padding: 0.3em 1em;\n    margin-top: 1em;\n  }\n\n  .previous-day__more-info:hover {\n    background: var(--clr-gray);\n  }\n\n  :nth-child(1) {\n    animation-delay: 100ms;\n  }\n\n  :nth-child(2) {\n    animation-delay: 125ms;\n  }\n\n  :nth-child(3) {\n    animation-delay: 150ms;\n  }\n\n  :nth-child(4) {\n    animation-delay: 175ms;\n  }\n\n  :nth-child(5) {\n    animation-delay: 200ms;\n  }\n\n  :nth-child(6) {\n    animation-delay: 225ms;\n  }\n\n  :nth-child(7) {\n    animation-delay: 250ms;\n  }\n\n  .show-weather.previous-weather .previous-day:nth-child(7) {\n    animation-delay: 300ms;\n  }\n`;\n","import React from 'react';\n// Styles\nimport {\n  PreviousWrapper,\n  Toggle,\n  PreviousDays,\n  PreviousDay,\n} from './Previous.styles';\n\nconst Previous = ({ weather, previous, setPrevious, setSelectedSol, isMetric }) => (\n  <PreviousWrapper previous={previous}>\n    <Toggle \n      htmlFor='weather-toggle'\n      onClick={() => setPrevious(prev => !prev)}\n      previous={previous}\n      >\n      <span>&#8593;</span>\n      <span className='sr-only'>Show previous weather</span>\n    </Toggle>\n\n    <h2 className='main-title previous-weather__title'>Previous 7 days</h2>\n    <PreviousDays>\n\n      {weather.map((sol, i) => (\n          <PreviousDay key={sol.sol} previous={previous}>\n              <h3 className='previous-day__sol'>\n                <span>{sol.sol}</span>\n              </h3>\n              <p className='previous-day__date'>\n                {sol.date}\n              </p>\n\n              <p className='previous-day__temp'>\n                High:\n                <span>{sol.maxTemp}</span>\n                <span>{isMetric ? ' C' : ' F'}</span>\n              </p>\n\n              <p className='previous-day__temp'>\n                Low:\n                <span>{sol.minTemp}</span>\n                <span>{isMetric ? ' C' : ' F'}</span>\n              </p>\n\n              <button className='previous-day__more-info'\n              onClick={() => setSelectedSol(i)}\n              >\n                More Info\n              </button>\n\n            </PreviousDay>\n      ))}\n\n\n    </PreviousDays>\n  </PreviousWrapper>\n);\n\nexport default Previous;\n","import styled, { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n\n  :root {\n    --fw-light: 300;\n    --fw-normal: 400;\n    --fw-semi: 500;\n    --fw-bold: 700;\n    --fs-h1: 1.5rem;\n    --fs-h2: 2.25rem;\n    --fs-body: 1rem;\n    --fs-xl: 4.5rem;\n    --clr-light: #fff;\n    --clr-gray: #989898;\n    --clr-dark: #444;\n    --clr-accent: #D06D6D;\n    --clr-accent-dark: #613131;\n  }\n\n  .sr-only:not(:focus):not(:active) {\n    clip: rect(0 0 0 0);\n    clip-path: inset(50%);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n  }\n\n  body {\n    margin: 0;\n    font-family: 'Montserrat', sans-serif;\n    line-height: 1.6;\n    background-image: url(${props => props.bgImage});\n    background-size: cover;\n    height: 100vh;\n\n    color: var(--clr-light);\n  }\n\n  h1, h2, h3 {\n    line-height: 1;\n  }\n\n  a {\n    color: var(--clr-accent);\n  }\n\n  a:hover {\n    color: var(--clr-accent-dark);\n  }\n`;\n\nexport const AppWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n`;\n\nexport const MarsWeather = styled.main`\n  background: rgba(0, 0, 0, 0.7);\n  padding: 2em;\n  max-width: 1000px;\n  margin: 40px 0;\n  border-radius: 20px;\n\n  .main-title {\n    font-size: var(--fs-h1);\n    font-weight: var(--fw-light);\n    text-transform: uppercase;\n    color: var(--clr-accent);\n    letter-spacing: 2px;\n    grid-column: 1 / -1;\n  }\n\n  .section-title {\n    font-size: var(--fs-h2);\n    font-weight: var(--fw-bold);\n    margin: 0;\n  }\n\n  .reading {\n    font-size: var(--fs-h1);\n    margin: 0;\n    color: var(--clr-gray);\n  }\n`;\n\nexport const InfoWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n`\n","import React, { useState, useEffect } from 'react';\n// Helpers\nimport { formatDate } from './helpers';\n// API\nimport { API_URL } from'./api';\n// Compnents\nimport WeatherData from './components/WeatherData';\nimport Info from './components/Info';\nimport Unit from './components/Unit';\nimport Previous from './components/Previous';\n// Img\nimport BGImage from './img/mars.jpg';\n// Styles\nimport { AppWrapper, GlobalStyle, MarsWeather, InfoWrapper } from './App.styles';\n\nconst App = () => {\n\n  const [loading, setLoading] = useState(true);\n  const [weather, setWeather] = useState([]);\n  const [selectedSol, setSelectedSol] = useState();\n  const [metric, setMetric] = useState(true);\n  const [previous, setPrevious] = useState(false);\n  console.log(weather);\n\n  useEffect(() => {\n\n    const fetchFromAPI = async () => {\n      const weather = await (await fetch(API_URL)).json();\n      const marsWeather = weather.sol_keys.map(solkey => {\n        return {\n          sol: solkey,\n          maxTemp: weather[solkey].AT?.mx || 'No data',\n          minTemp: weather[solkey].AT?.mn || 'No data',\n          windSpeed: Math.round(weather[solkey].HWS?.av || 0),\n          windDirectionDegrees: weather[solkey].WD?.most_common?.compass_degrees || 0, \n          date: formatDate(new Date( weather[solkey].First_UTC)),\n\n        };\n      });\n      \n      setWeather(marsWeather);\n      setSelectedSol(marsWeather.length - 1);\n      setLoading(false);\n    };\n      \n      fetchFromAPI();\n\n  }, []);\n\n  return (\n    <>\n      <GlobalStyle bgImage={BGImage} />\n        <AppWrapper>\n          <MarsWeather>\n            {loading ? <div>Loading Weather...</div> : (\n              <>\n                <h1 className=\"main-title\">Latest Weather at Planet Mars</h1>\n\n                <WeatherData sol={weather[selectedSol]} isMetric={metric}/>\n                <InfoWrapper>\n                  <Info />\n                  <Unit metric={metric} setMetric={setMetric} />\n                </InfoWrapper>\n\n              </>\n\n            )}\n          </MarsWeather>\n          <Previous \n              weather={weather}\n              previous={previous}\n              setPrevious={setPrevious}\n              setSelectedSol={setSelectedSol}\n              isMetric={metric}\n          />\n        </AppWrapper>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}